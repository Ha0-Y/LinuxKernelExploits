/*
 * socket buffer: 堆喷射
 */
#define SOCKET_NUM 8
#define SK_BUFF_NUM 128

// 创建
int init_socket_array(int sk_socket[SOCKET_NUM][2]) {
  /* socket pairs to spray sk_buff */
  for (int i = 0; i < SOCKET_NUM; i++) {
    if (socketpair(AF_UNIX, SOCK_STREAM, 0, sk_socket[i]) < 0) {
      log_warning("failed to create no.%d socket pair!\n", i);
      return -1;
    }
  }
  return 0;
}

// 喷射
int spray_sk_buff(int sk_socket[SOCKET_NUM][2], void *buf, size_t size) {
  for (int i = 0; i < SOCKET_NUM; i++) {
    for (int j = 0; j < SK_BUFF_NUM; j++) {
      if (write(sk_socket[i][0], buf, size) < 0) {
        log_warning("failed to spray %d sk_buff for %d socket!", j, i);
        return -1;
      }
    }
  }

  return 0;
}

// free 结构体
int free_sk_buff(int sk_socket[SOCKET_NUM][2], void *buf, size_t size) {
  for (int i = 0; i < SOCKET_NUM; i++) {
    for (int j = 0; j < SK_BUFF_NUM; j++) {
      if (read(sk_socket[i][1], buf, size) < 0) {
        log_warning("failed to received sk_buff!");
        return -1;
      }
    }
  }

  return 0;
}